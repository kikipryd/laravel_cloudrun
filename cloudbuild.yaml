steps:
  # Docker Submit
  - id  : 'Docker Submit'
    name: 'google/cloud-sdk'
    args: ['gcloud', 'builds', 'submit',
           '--pack', 'image=${_ZONE_ID}-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REGISTRY}/${_APP_NAME}:${SHORT_SHA}']

  # Docker Create
  - id  : 'Docker Create'
    name: 'google/cloud-sdk'
    args: ['gcloud', 'beta', 'run', 'jobs', 'create', 'migrate',
          '--image', '${REGISTRY_NAME}/laravel',
          '--region', '${REGION}',
          '--set-cloudsql-instances', '${PROJECT_ID}:${REGION}:${INSTANCE_NAME}',
          '--set-secrets', '/config/.env=laravel_settings:latest',
          '--command, launcher',
          '--args', "php artisan migrate"]

  # Docker Execute
  - id  : 'Docker Excecute'
    name: 'google/cloud-sdk'
    args: ['gcloud', 'beta', 'run', 'jobs', 'execute', 'migrate', '--region', '${REGION}', '--wait']

  # Docker Run
  - id  : 'Docker Run'
    name: 'google/cloud-sdk'
    args: ['gcloud', 'run', 'deploy', '${_APP_NAME}',
           '--image', '${_ZONE_ID}-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REGISTRY}/${_APP_NAME}:${SHORT_SHA}',
           '--region', '${_ZONE_ID}', '--platform', 'managed',
           '--set-cloudsql-instances' '${PROJECT_ID}:${REGION}:${INSTANCE_NAME}',
           '--set-secrets' '/config/.env=laravel_settings:latest',
           '--allow-unauthenticated']

# Store images in Google Artifact Registry
images:
  - ${_ZONE_ID}-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REGISTRY}/${_APP_NAME}:${SHORT_SHA}

substitutions:
  _ARTIFACT_REGISTRY: emagang-repo
  _ZONE_ID: us-central1
  _APP_NAME: laravel
